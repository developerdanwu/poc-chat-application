// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Message {
  clientMessageId String   @id @default(cuid()) @map("client_message_id")
  text            String   @db.LongText
  timestamp       DateTime @default(now())
  type            String
  content         String   @db.LongText
  authorId        Int      @map("author_id")
  author          Author   @relation(fields: [authorId], references: [authorId])
  chatroomId      String   @map("chatroom_id")
  chatroom        Chatroom @relation(fields: [chatroomId], references: [id], onDelete: Cascade)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@index([authorId])
  @@index([chatroomId])
  @@map("message")
}

model Author {
  firstName String     @map("first_name")
  lastName  String     @map("last_name")
  email     String?    @unique
  authorId  Int        @id @default(autoincrement()) @map("author_id")
  role      String     @map("role")
  userId    String?    @unique @map("user_id")
  messages  Message[]
  chatrooms Chatroom[]
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("author")
}

model Chatroom {
  id        String    @id @default(cuid())
  messages  Message[]
  users     Author[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@index([id])
  @@map("chatroom")
}
